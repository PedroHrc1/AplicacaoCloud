AWSTemplateFormatVersion: '2010-09-09'
Description: Projeto Computação em nuvem - Cloudformation

Parameters:
  KeyName:
    Description: 'Nome do par de chaves SSH para acessar as instâncias'
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: 'ChaveCloud'

Resources:
  PrjPedroVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"

  PrjPedroInternetGateway:
    Type: AWS::EC2::InternetGateway

  PrjPedroGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref PrjPedroVPC
      InternetGatewayId: !Ref PrjPedroInternetGateway

  PrjPedroPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PrjPedroVPC

  PrjPedroPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: PrjPedroGatewayAttachment
    Properties:
      RouteTableId: !Ref PrjPedroPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref PrjPedroInternetGateway

  PrjPedroSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PrjPedroVPC
      AvailabilityZone: us-east-1a
      CidrBlock: "10.0.0.0/24"
      MapPublicIpOnLaunch: true
  
  PrjPedroSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PrjPedroVPC
      AvailabilityZone: us-east-1b
      CidrBlock: "10.0.2.0/24"
      MapPublicIpOnLaunch: true

  PrjPedroSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrjPedroSubnet1
      RouteTableId: !Ref PrjPedroPublicRouteTable

  PrjPedroSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrjPedroSubnet2
      RouteTableId: !Ref PrjPedroPublicRouteTable

  PrjPedroInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: launch-wizard created
      VpcId: !Ref PrjPedroVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: 0.0.0.0/0

  PrjPedroALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      VpcId: !Ref PrjPedroVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  PrjPedroALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: PrjPedroALB
      Subnets: 
        - !Ref PrjPedroSubnet1
        - !Ref PrjPedroSubnet2
      SecurityGroups:
        - !Ref PrjPedroALBSecurityGroup
      Scheme: internet-facing
      Tags:
        - Key: Name
          Value: PrjPedroALB

  PrjPedroTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200-399
      Name: PrjPedroTargetGroup
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !Ref PrjPedroVPC

  PrjPedroALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref PrjPedroTargetGroup
      LoadBalancerArn: !Ref PrjPedroALB
      Port: 80
      Protocol: HTTP

  PrjPedroLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-04b70fa74e45c3917
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref PrjPedroInstanceSecurityGroup
      IamInstanceProfile: !Ref PrjPedroInstanceProfile
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install -y python3-pip git
          sudo pip3 install flask boto3
          sudo mkdir /opt/app
          sudo git clone https://github.com/PedroHrc1/AplicacaoCloud.git /opt/app
          nohup python3 /opt/app/app.py > /var/log/app.log 2>&1 &

  PrjPedroAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: [us-east-1a, us-east-1b]
      LaunchConfigurationName: !Ref PrjPedroLaunchConfiguration
      MinSize: 2
      MaxSize: 7
      DesiredCapacity: 3
      VPCZoneIdentifier:
        - !Ref PrjPedroSubnet1
        - !Ref PrjPedroSubnet2
      TargetGroupARNs:
        - !Ref PrjPedroTargetGroup  
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      Tags:
        - Key: Name
          Value: PrjPedroAutoScalingGroup
          PropagateAtLaunch: true

  PrjPedroScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref PrjPedroAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        TargetValue: 70.0  
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
  
  PrjPedroCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Alarme de utilização da CPU excedendo 70%"
      Namespace: AWS/EC2
      MetricName: CPUUtilization
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref PrjPedroAutoScalingGroup
      Statistic: Average
      Period: 60
      EvaluationPeriods: 5
      Threshold: 70
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref PrjPedroScalingPolicy

  PrjPedroDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PrjPedroDynamoDBTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  PrjPedroDynamoDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for DynamoDB
      VpcId: !Ref PrjPedroVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref PrjPedroInstanceSecurityGroup

  PrjPedroDynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PrjPedroDynamoDBAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:UpdateItem
                  - dynamodb:Scan
                  - dynamodb:BatchWriteItem
                  - dynamodb:BatchGetItem
                  - dynamodb:Query
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt PrjPedroDynamoDBTable.Arn

  PrjPedroInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref PrjPedroDynamoDBRole]

  PrjPedroVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: com.amazonaws.us-east-1.dynamodb
      VpcId: !Ref PrjPedroVPC
      RouteTableIds:
        - !Ref PrjPedroPublicRouteTable
      VpcEndpointType: Gateway

Outputs:
  PrjPedroAutoScalingGroupId:
    Description: "ID do Grupo de Auto Scaling"
    Value: !Ref PrjPedroAutoScalingGroup
  PrjPedroALBDNSName:
    Description: "DNS Name of the ALB"
    Value: !GetAtt PrjPedroALB.DNSName
